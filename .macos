#!/usr/bin/env bash
source ./utils.sh

# Sets reasonable macOS defaults.
#
# Or, in other words, set shit how I like in macOS.
#
# The original idea (and a couple settings) were grabbed from:
#   https://github.com/mathiasbynens/dotfiles/blob/master/.macos
#   And Dries Vints
#   https://driesvints.com/blog/getting-started-with-dotfiles/
#
# Run ./.macos.sh and you and you can just run this file
# Or run .install.sh first (better option)
# Thanks to Mathias Bynens! https://mths.be/macos

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &


###############################################################################
# Activity Monitor                                                            #
###############################################################################
print_info " Activity Monitor"

execute "defaults write com.apple.ActivityMonitor OpenMainWindow -bool true" \
    "Show the main window when launching Activity Monitor"

execute "defaults write com.apple.ActivityMonitor IconType -int 5" \
    "Visualize CPU usage in the Activity Monitor Dock icon"

execute "defaults write com.apple.ActivityMonitor ShowCategory -int 0" \
    "Show all processes in Activity Monitor"

execute "defaults write com.apple.ActivityMonitor SortColumn -string 'CPUUsage' && \
         defaults write com.apple.ActivityMonitor SortDirection -int 0" \
    "Sort Activity Monitor results by CPU usage"

execute "defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false" \
    "Disable backswipe"

execute "defaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false" \
    "Disable Canary backswipe"

execute "defaults write com.google.Chrome PMPrintingExpandedStateForPrint2 -bool true" \
    "Expand print dialog by default"

execute "defaults write com.google.Chrome DisablePrintPreview -bool true" \
    "Use system-native print preview dialog"

execute "defaults write com.google.Chrome ExtensionInstallSources -array 'https://gist.githubusercontent.com/' 'http://userscripts.org/*'" \
    "Allow installing user scripts via GitHub Gist or Userscripts.org"

execute "defaults write com.google.Chrome.canary ExtensionInstallSources -array 'https://gist.githubusercontent.com/' 'http://userscripts.org/*'" \
    "Allow Canary installing user scripts via GitHub Gist or Userscripts.org"

killall "Activity Monitor" &> /dev/null

###############################################################################
# App Store                                                                   #
###############################################################################
print_info " App Store"

execute "defaults write com.apple.appstore ShowDebugMenu -bool true" \
    "Enable debug menu"

execute "defaults write com.apple.appstore WebKitDeveloperExtras -bool true" \
    "Enable the WebKit Developer Tools in the Mac App Store"

execute "defaults write com.apple.commerce AutoUpdate -bool true" \
    "Turn on auto-update"

execute "defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true" \
    "Enable automatic update check"

execute "defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1" \
    "Download newly available updates in background"

execute "defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1" \
    "Install System data files and security updates"

killall "App Store" &> /dev/null

###############################################################################
# Bluetooth                                                                   #
###############################################################################
print_info " Bluetooth"

execute "defaults write com.apple.BluetoothAudioAgent 'Apple Bitpool Min (editable)' -int 40" \
    "Increase sound quality for Bluetooth headphones/headsets"

killall "Bluetooth" &> /dev/null

###############################################################################
# Chrome                                                                      #
###############################################################################
print_info " Chrome"

execute "defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false" \
    "Disable backswipe"

execute "defaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false" \
    "Disable Canary backswipe"

execute "defaults write com.google.Chrome PMPrintingExpandedStateForPrint2 -bool true" \
    "Expand print dialog by default"

execute "defaults write com.google.Chrome DisablePrintPreview -bool true" \
    "Use system-native print preview dialog"

execute "defaults write com.google.Chrome ExtensionInstallSources -array 'https://gist.githubusercontent.com/' 'http://userscripts.org/*'" \
    "Allow installing user scripts via GitHub Gist or Userscripts.org"

execute "defaults write com.google.Chrome.canary ExtensionInstallSources -array 'https://gist.githubusercontent.com/' 'http://userscripts.org/*'" \
    "Allow Canary installing user scripts via GitHub Gist or Userscripts.org"

killall "Google Chrome" &> /dev/null

###############################################################################
# Dashboard                                                                   #
###############################################################################
print_info " Dashboard"

execute "defaults write com.apple.dashboard mcx-disabled -bool true" \
    "Disable Dashboard"

execute "defaults write com.apple.dock dashboard-in-overlay -bool true" \
    "Don’t show Dashboard as a Space"

execute "defaults write com.apple.dashboard devmode -bool true" \
    "Enable Dashboard dev mode (allows keeping widgets on the desktop)"

# 'killall Dashboard' doesn't actually do anything. To apply
# the changes for Dashboard, 'killall Dock' is enough as `Dock`
# is `Dashboard`'s parent process.

killall "Dock" &> /dev/null

###############################################################################
# Dock                                                                        #
###############################################################################
print_info " Dock"

execute "defaults write $HOME/Library/Preferences/.GlobalPreferences.plist AppleInterfaceTheme -string 'Dark'" \
    "Dark menu bar and dock"

execute "defaults write com.apple.dock autohide -bool true" \
    "Automatically hide/show the Dock"

execute "defaults write com.apple.dock pinning -string start" \
    "Dock set to top left"

execute "defaults write com.apple.dock mouse-over-hilite-stack -bool true" \
    "Enable highlight hover effect for the grid view of a stack (Dock)"

execute "defaults write com.apple.dock autohide-delay -float 0" \
    "Remove the auto-hiding Dock delay"

execute "defaults write com.apple.dock autohide-time-modifier -float 0" \
    "Remove the animation when hiding/showing the Dock"

execute "defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true" \
    "Enable spring loading for all Dock items"

execute "defaults write com.apple.dock expose-animation-duration -float 0.1" \
    "Speed up Mission Control animations"

execute "defaults write com.apple.dock expose-group-by-app -bool true" \
    "Group windows by application in Mission Control"

execute "defaults write com.apple.dock mineffect -string 'scale'" \
    "Change minimize/maximize window effect"

execute "defaults write com.apple.dock minimize-to-application -bool false" \
    "Do not reduce clutter by minimizing windows into their application icons"

execute "defaults write com.apple.dock mru-spaces -bool false" \
    "Do not automatically rearrange spaces based on most recent use"

execute "defaults write com.apple.dock persistent-apps -array && \
         defaults write com.apple.dock persistent-others -array " \
    "Wipe all app icons"

execute "defaults write com.apple.dock launchanim -bool false" \
    "Don’t animate opening applications from the Dock"

execute "defaults write com.apple.dock no-glass -bool true" \
    "Enable the 2D Dock"

execute "defaults write com.apple.dock hide-mirror -bool true" \
    "Make Dock more transparent"

execute "defaults write com.apple.dock show-process-indicators -bool true" \
    "Show indicator lights for open applications"

execute "defaults write com.apple.dock showhidden -bool true" \
    "Make icons of hidden applications translucent"

execute "defaults write com.apple.dock tilesize -int 20" \
    "Set icon size to 20px"

execute "defaults write com.apple.dock static-only -bool TRUE" \
    "Shown only active apps"

execute "defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type=\"spacer-tile\";}'" \
    "Add a spacer to the left side of the Dock (where the applications are)"

execute "defaults write com.apple.dock persistent-others -array-add '{tile-data={}; tile-type=\"spacer-tile\";}'" \
    "Add a spacer to the right side of the Dock (where the Trash is)"

# Add iOS & Watch Simulator to Launchpad
sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator.app" "/Applications/Simulator.app"
sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator (Watch).app" "/Applications/Simulator (Watch).app"

# Hot corners
# Possible values:
#  0: no-op
#  2: Mission Control
#  3: Show application windows
#  4: Desktop
#  5: Start screen saver
#  6: Disable screen saver
#  7: Dashboard
# 10: Put display to sleep
# 11: Launchpad
# 12: Notification Center
execute "defaults write com.apple.dock wvous-tr-corner -int 12" \
    "Top right screen corner → Notification Center"
execute "defaults write com.apple.dock wvous-tr-modifier -int 0"
execute "defaults write com.apple.dock wvous-tl-corner -int 4" \
    "Top left screen corner → Desktop"
execute "defaults write com.apple.dock wvous-tl-modifier -int 0"
execute "defaults write com.apple.dock wvous-bl-corner -int 2" \
    "Bottom left screen corner → Mission Control"
execute "defaults write com.apple.dock wvous-bl-modifier -int 0"
execute "defaults write com.apple.dock wvous-br-corner -int 7" \
    "Bottom left screen corner → Dashboard"
execute "defaults write com.apple.dock wvous-br-modifier -int 0"

killall "Dock" &> /dev/null

###############################################################################
# Finder                                                                      #
###############################################################################
print_info " Finder"

execute "defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true && \
         defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true && \
         defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true" \
    "Automatically open a new Finder window when a volume is mounted"

execute "defaults write com.apple.finder _FXShowPosixPathInTitle -bool true" \
    "Use full POSIX path as window title"

execute "defaults write NSGlobalDomain _HIHideMenuBar -bool false" \
    "Auto hide menu bar"

execute "defaults write com.apple.finder DisableAllAnimations -bool true" \
    "Disable all animations"

execute "defaults write com.apple.finder WarnOnEmptyTrash -bool false" \
    "Disable the warning before emptying the Trash"

execute "defaults write com.apple.finder EmptyTrashSecurely -bool true" \
    "Empty Trash securely by default"

execute "defaults write com.apple.finder FXDefaultSearchScope -string 'SCcf'" \
    "Search the current directory by default"

execute "defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false" \
    "Disable warning when changing a file extension"

# Four-letter codes for the other view modes: `icnv`, `Nlsv`, `Flwv`
execute "defaults write com.apple.finder FXPreferredViewStyle -string 'Nlsv'" \
    "Use list view in all Finder windows by default"

execute "defaults write com.apple.finder NewWindowTarget -string 'PfDe' && \
         defaults write com.apple.finder NewWindowTargetPath -string 'file://$HOME/Desktop/'" \
    "Set 'Desktop' as the default location for new Finder windows"

execute "defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true && \
         defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true && \
         defaults write com.apple.finder ShowMountedServersOnDesktop -bool true && \
         defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true" \
    "Show icons for hard drives, servers, and removable media on the desktop"

execute "defaults write com.apple.finder ShowRecentTags -bool false" \
    "Do not show recent tags"

execute "defaults write NSGlobalDomain AppleShowAllExtensions -bool true" \
    "Show all filename extensions"

# Increase the size of icons on the desktop and in other icon views
execute "/usr/libexec/PlistBuddy -c 'Set :DesktopViewSettings:IconViewSettings:iconSize 80' ~/Library/Preferences/com.apple.finder.plist && \
         /usr/libexec/PlistBuddy -c 'Set :FK_StandardViewSettings:IconViewSettings:iconSize 80' ~/Library/Preferences/com.apple.finder.plist && \
         /usr/libexec/PlistBuddy -c 'Set :StandardViewSettings:IconViewSettings:iconSize 80' ~/Library/Preferences/com.apple.finder.plist" \
    "Set icon size"

# Increase grid spacing for icons on the desktop and in other icon views
execute "/usr/libexec/PlistBuddy -c 'Set :DesktopViewSettings:IconViewSettings:gridSpacing 50' ~/Library/Preferences/com.apple.finder.plist && \
         /usr/libexec/PlistBuddy -c 'Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 50' ~/Library/Preferences/com.apple.finder.plist && \
         /usr/libexec/PlistBuddy -c 'Set :StandardViewSettings:IconViewSettings:gridSpacing 50' ~/Library/Preferences/com.apple.finder.plist" \
    "Set icon grid spacing size"

# Set icon lables size
execute "/usr/libexec/PlistBuddy -c 'Set :DesktopViewSettings:IconViewSettings:textSize 13' ~/Library/Preferences/com.apple.finder.plist && \
         /usr/libexec/PlistBuddy -c 'Set :FK_StandardViewSettings:IconViewSettings:textSize 13' ~/Library/Preferences/com.apple.finder.plist && \
         /usr/libexec/PlistBuddy -c 'Set :StandardViewSettings:IconViewSettings:textSize 13' ~/Library/Preferences/com.apple.finder.plist" \
    "Set icon label text size"

# Set icon lables to bottom
execute "/usr/libexec/PlistBuddy -c 'Set :DesktopViewSettings:IconViewSettings:labelOnBottom true' ~/Library/Preferences/com.apple.finder.plist && \
         /usr/libexec/PlistBuddy -c 'Set :FK_StandardViewSettings:IconViewSettings:labelOnBottom true' ~/Library/Preferences/com.apple.finder.plist && \
         /usr/libexec/PlistBuddy -c 'Set :StandardViewSettings:IconViewSettings:labelOnBottom true' ~/Library/Preferences/com.apple.finder.plist" \
    "Set icon label position"

# Show icon info
execute "/usr/libexec/PlistBuddy -c 'Set :DesktopViewSettings:IconViewSettings:showItemInfo true' ~/Library/Preferences/com.apple.finder.plist && \
         /usr/libexec/PlistBuddy -c 'Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true' ~/Library/Preferences/com.apple.finder.plist && \
         /usr/libexec/PlistBuddy -c 'Set :StandardViewSettings:IconViewSettings:showItemInfo true' ~/Library/Preferences/com.apple.finder.plist" \
    "Show item info"

# Enable snap-to-grid for icons on the desktop and in other icon views
execute "/usr/libexec/PlistBuddy -c 'Set :DesktopViewSettings:IconViewSettings:arrangeBy grid' ~/Library/Preferences/com.apple.finder.plist && \
         /usr/libexec/PlistBuddy -c 'Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid' ~/Library/Preferences/com.apple.finder.plist && \
         /usr/libexec/PlistBuddy -c 'Set :StandardViewSettings:IconViewSettings:arrangeBy grid' ~/Library/Preferences/com.apple.finder.plist" \
    "Set sort method"

execute "defaults write com.apple.finder QuitMenuItem -bool true" \
    "Finder: allow quitting via ⌘ + Q; doing so will also hide desktop icons"

execute "defaults write com.apple.finder AppleShowAllFiles -bool true" \
    "Finder: show hidden files by default"

execute "defaults write com.apple.finder ShowStatusBar -bool true" \
    "Finder: show status bar"

execute "defaults write com.apple.finder ShowPathbar -bool true" \
    "Finder: show path bar"

execute "defaults write com.apple.finder QLEnableTextSelection -bool true" \
    "Finder: allow text selection in Quick Look"

execute "defaults write NSGlobalDomain com.apple.springing.enabled -bool true" \
    "Enable spring loading for directories"

execute "defaults write NSGlobalDomain com.apple.springing.delay -float 0" \
    "Remove the spring loading delay for directories"

execute "defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true" \
    "Avoid creating .DS_Store files on network volumes"

execute "defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true" \
    "Enable AirDrop over Ethernet and on unsupported Macs running Lion"

execute "defaults write com.apple.finder FXInfoPanesExpanded -dict General -bool true OpenWith -bool true Privileges -bool true" \
    "Expand the following File Info panes: “General”, “Open with”, and “Sharing & Permissions”"

execute "chflags nohidden $HOME/Library" \
    "Show the ~/Library folder"

killall "Finder" &> /dev/null

# Starting with Mac OS X Mavericks preferences are cached,
# so in order for things to get properly set using `PlistBuddy`,
# the `cfprefsd` process also needs to be killed
#
# https://github.com/alrra/dotfiles/commit/035dda057ddc6013ba21db3d2c30eeb51ba8f200

killall "cfprefsd" &> /dev/null

###############################################################################
# Firefox                                                                     #
###############################################################################
print_info " Firefox"

execute "defaults write org.mozilla.firefox AppleEnableSwipeNavigateWithScrolls -bool false" \
    "Disable backswipe"

killall "firefox" &> /dev/null

###############################################################################
# iCal                                                                        #
###############################################################################
execute "defaults write com.apple.ical 'number of hours displayed' 12" \
    "Show 24 hours a day"

execute "defaults write com.apple.ical 'first day of the week' 1" \
    "Week should start on Monday"

execute "defaults write com.apple.ical 'first minute of work hours' 540" \
    "Day starts at 9AM"

###############################################################################
# Itunes                                                                      #
###############################################################################
print_info " iTunes"

execute "defaults write com.apple.iTunes show-store-link-arrows -bool false" \
    "Disable the iTunes store link arrows"

execute "defaults write com.apple.iTunes disableGeniusSidebar -bool true" \
    "Disable the Genius sidebar in iTunes"

execute "defaults write com.apple.iTunes disablePingSidebar -bool true" \
    "Disable the Ping sidebar in iTunes"

execute "defaults write com.apple.iTunes disablePing -bool true" \
    "Disable all the other Ping stuff in iTunes"

execute "defaults write com.apple.iTunes disableRadio -bool true" \
    "Disable radio stations in iTunes"

execute "defaults write com.apple.iTunes NSUserKeyEquivalents -dict-add 'Target Search Field' '@F'" \
    "Make ⌘ + F focus the search input in iTunes"

killall "iTunes" &> /dev/null

###############################################################################
# Keyboard                                                                    #
###############################################################################
print_info " Keyboard"

execute "defaults write NSGlobalDomain AppleKeyboardUIMode -int 3" \
    "Enable full keyboard access for all controls"

execute "defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool true" \
    "Enable press-and-hold"

execute "defaults write NSGlobalDomain KeyRepeat -int 0" \
    "Set the key repeat rate to fast"

execute "defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false" \
    "Disable smart quotes"

execute "defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false" \
    "Disable smart dashes"

execute "defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool true" \
    "Enable autocorrect"

###############################################################################
# Language, Region, Date and Time                                             #
###############################################################################
print_info " Language & Region"

execute "defaults write NSGlobalDomain AppleLanguages -array 'en'" \
    "Set language"

execute "defaults write NSGlobalDomain AppleMeasurementUnits -string 'Inches'" \
    "Set measurement units"

execute "defaults write NSGlobalDomain AppleLocale -string 'en_US@currency=USD'" \
    "Set currency units"

execute "defaults write NSGlobalDomain AppleMetricUnits -bool false" \
    "Set metrics units false"

execute "sudo systemsetup -settimezone "America/Chicago" > /dev/null" \
    "Set the timezone; see `systemsetup -listtimezones` for other values"

# Custom DateFormat
# 12 Hour Mode with AM/PM: EEE MMM d  h:mm:ss a
# 12 Hour Mode without AM/PM: EEE MMM d  h:mm:ss
# 24 Hour Mode: EEE MMM d  H:mm:ss
execute "defaults write com.apple.menuextra.clock DateFormat 'EEE MMM d  h:mm:ss a'" \
    "Set the time format"

###############################################################################
# Mail                                                                        #
###############################################################################
print_info " Mail"

execute "defaults write com.apple.mail DisableReplyAnimations -bool true && \
         defaults write com.apple.mail DisableSendAnimations -bool true" \
    "Disable send and reply animations in Mail.app"

execute "defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false" \
    "Copy email addresses as 'foo@example.com' instead of 'Foo Bar <foo@example.com>'' in Mail.app"

execute "defaults write com.apple.mail DraftsViewerAttributes -dict-add 'DisplayInThreadedMode' -string 'yes' && \
         defaults write com.apple.mail DraftsViewerAttributes -dict-add 'SortedDescending' -string 'yes' && \
         defaults write com.apple.mail DraftsViewerAttributes -dict-add 'SortOrder' -string 'received-date'" \
    "Display emails in threaded mode, sorted by date (oldest at the top)"

execute "defaults write com.apple.mail DisableInlineAttachmentViewing -bool true" \
    "Disable inline attachments (just show the icons)"


killall "Mail" &> /dev/null

###############################################################################
# Maps                                                                        #
###############################################################################
print_info " Maps"

execute "defaults write com.apple.Maps LastClosedWindowViewOptions '{
            localizeLabels = 1;   // show labels in English
            mapType = 11;         // show hybrid map
            trafficEnabled = 1;   // show traffic
         }'" \
    "Set view options"

killall "Maps" &> /dev/null

###############################################################################
# Messages                                                                    #
###############################################################################
print_info " Messages"

execute "defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add 'automaticQuoteSubstitutionEnabled' -bool false" \
    "Disable smart quotes as it’s annoying for messages that contain code"

execute "defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add 'continuousSpellCheckingEnabled' -bool false" \
    "Disable continuous spell checking"

killall "Messages" &> /dev/null

###############################################################################
# Photos                                                                      #
###############################################################################
execute "defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true" \
    "Prevent Photos from opening automatically when devices are plugged in"

killall "Photos" &> /dev/null

###############################################################################
# Safari & WebKit                                                             #
###############################################################################
print_info " Safari"

execute "defaults write com.apple.Safari AutoOpenSafeDownloads -bool false" \
    "Disable opening 'safe' files automatically"

execute "defaults write com.apple.Safari ShowSidebarInTopSites -bool false" \
    "Hide Safari’s sidebar in Top Sites"

execute "defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2" \
    "Disable Safari’s thumbnail cache for History and Top Sites"

execute "defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool true" \
    "Set backspace key to go to the previous page in history"

execute "defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true && \
         defaults write com.apple.Safari IncludeDevelopMenu -bool true && \
         defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true" \
    "Enable the 'Develop' menu and the 'Web Inspector'"

execute "defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false" \
    "Set search type to 'Contains' instead of 'Starts With'"

execute "defaults write com.apple.Safari HomePage -string 'about:blank'" \
    "Set home page to 'about:blank'"

execute "defaults write com.apple.Safari IncludeInternalDebugMenu -bool true" \
    "Enable 'Debug' menu"

execute "defaults write com.apple.Safari ShowFavoritesBar -bool true" \
    "Show bookmarks bar by default"

execute "defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true" \
    "Show the full URL in the address bar"

execute "defaults write com.apple.Safari SuppressSearchSuggestions -bool true && \
         defaults write com.apple.Safari UniversalSearchEnabled -bool false" \
    "Don’t send search queries to Apple"

execute "defaults write NSGlobalDomain WebKitDeveloperExtras -bool true" \
    "Add a context menu item for showing the 'Web Inspector' in web views"

killall "Safari" &> /dev/null

###############################################################################
# SSD tweaks                                                                  #
###############################################################################
print_info " SSD tweaks"

execute "sudo pmset -a hibernatemode 0" \
    "Disable hibernation (speeds up entering sleep mode)"

execute "sudo pmset -a sms 0" \
    "Disable the sudden motion sensor as it’s not useful for SSDs"

execute "sudo pmset -a standbydelay 86400" \
    "Set standby delay to 24 hours (default is 1 hour)"

###############################################################################
# Sublime Text                                                                #
###############################################################################
print_info " Sublime Text"

execute "cp -r $HOME/dotfiles/sublime_text/Default\ \(OSX\).sublime-keymap $HOME/Library/Application\ Support/Sublime\ Text/Packages/User/Default\ \(OSX\).sublime-keymap 2> /dev/null" \
    "Install Sublime Text key bindings"

execute "cp -r $HOME/dotfiles/sublime_text/Package\ Control.sublime-settings $HOME/Library/Application\ Support/Sublime\ Text/Packages/User/Package\ Control.sublime-settings 2> /dev/null" \
    "Install Sublime Text package control settings"

execute "cp -r $HOME/dotfiles/sublime_text/Markdown.sublime-settings $HOME/Library/Application\ Support/Sublime\ Text/Packages/User/Markdown.sublime-settings 2> /dev/null" \
    "Install Sublime Text package control settings"

execute "cp -r $HOME/dotfiles/sublime_text/Preferences.sublime-settings $HOME/Library/Application\ Support/Sublime\ Text/Packages/User/Preferences.sublime-settings 2> /dev/null" \
    "Install Sublime Text settings"


killall "Sublime Text" &> /dev/null


###############################################################################
# Terminal & iTerm                                                            #
###############################################################################

print_info " Terminal & iTerm "

execute "defaults write com.apple.terminal FocusFollowsMouse -string true" \
    "Make the focus automatically follow the mouse"

execute "defaults write com.apple.terminal SecureKeyboardEntry -bool true" \
    "Enable 'Secure Keyboard Entry'"

execute "defaults write com.apple.terminal StringEncodings -array 4" \
    "Only use UTF-8 in Terminal.app"

execute "defaults write com.googlecode.iterm2 PromptOnQuit -bool false" \
    "Don’t display the annoying prompt when quitting iTerm"

# Install the Solarized Dark theme for iTerm
# start_if_needed iTerm
open "${HOME}/dotfiles/config/Solarized_Dark.itermcolors"

###############################################################################
# TextEdit                                                                    #
###############################################################################
print_info " TextEdit"

execute "defaults write com.apple.TextEdit PlainTextEncoding -int 4 && \
         defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4" \
    "Open and save files as UTF-8 encoded"

execute "defaults write com.apple.TextEdit RichText -int 0" \
    "Use plain text mode for new documents"

killall "TextEdit" &> /dev/null

###############################################################################
# Time Machine                                                                #
###############################################################################
print_info " Time Machine"

execute "defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true" \
    "Prevent Time Machine from prompting to use new hard drives as backup volume"


###############################################################################
# Trackpad                                                                    #
###############################################################################
print_info " Trackpad"

execute "defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true && \
         defaults write com.apple.AppleMultitouchTrackpad Clicking -int 1 && \
         defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1 && \
         defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1" \
    "Enable 'Tap to click'"

execute "defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true && \
         defaults write com.apple.AppleMultitouchTrackpad TrackpadRightClick -int 1 && \
         defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true && \
         defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 0 && \
         defaults write com.apple.AppleMultitouchTrackpad TrackpadCornerSecondaryClick -int 0 && \
         defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 0" \
    "Map 'click or tap with two fingers' to the secondary click"

###############################################################################
# Transmission                                                                #
###############################################################################
print_info " Transmission"

execute "defaults write org.m0k.transmission DeleteOriginalTorrent -bool true" \
    "Delete the original torrent files"

execute "defaults write org.m0k.transmission DownloadAsk -bool false" \
    "Don’t prompt for confirmation before downloading"

execute "defaults write org.m0k.transmission MagnetOpenAsk -bool false" \
    "Don’t prompt for confirmation before downloading for magnet links"

execute "defaults write org.m0k.transmission DownloadChoice -string 'Constant' && \
         defaults write org.m0k.transmission DownloadFolder -string '$HOME/Documents'" \
    "Use '~/Documents' to store complete downloads"

execute "defaults write org.m0k.transmission UseIncompleteDownloadFolder -bool true && \
         defaults write org.m0k.transmission IncompleteDownloadFolder -string '$HOME/Documents/torrents'" \
    "Use '~/Documents/torrents' to store incomplete downloads"

execute "defaults write org.m0k.transmission WarningDonate -bool false" \
    "Hide the donate message"

execute "defaults write org.m0k.transmission WarningLegal -bool false" \
    "Hide the legal disclaimer"

killall "Transmission" &> /dev/null

###############################################################################
# Twitter                                                                     #
###############################################################################
print_info " Twitter"

execute "defaults write com.twitter.twitter-mac AutomaticQuoteSubstitutionEnabled -bool false" \
    "Disable smart quotes as it’s annoying for code tweets"

execute "defaults write com.twitter.twitter-mac MenuItemBehavior -int 1" \
    "Show the app window when clicking the menu icon"

execute "defaults write com.twitter.twitter-mac ShowDevelopMenu -bool true" \
    "Enable the hidden ‘Develop’ menu"

execute "defaults write com.twitter.twitter-mac openLinksInBackground -bool true" \
    "Open links in the background"

execute "defaults write com.twitter.twitter-mac ESCClosesComposeWindow -bool true" \
    "Allow closing the ‘new tweet’ window by pressing 'Esc'"

execute "defaults write com.twitter.twitter-mac ShowFullNames -bool true" \
    "Show full names rather than Twitter handles"

execute "defaults write com.twitter.twitter-mac HideInBackground -bool true" \
    "Hide the app in the background if it’s not the front-most window"

killall "Twitter" &> /dev/null

###############################################################################
# UI/UX                                                                       #
###############################################################################
print_info " UI & UX"

execute "defaults write com.apple.menuextra.battery ShowPercent -string 'YES'" \
    "Show battery percentage from the menu bar"

execute "defaults write com.apple.CrashReporter UseUNC 1" \
    "Make crash reports appear as notifications"

execute "defaults write com.apple.LaunchServices LSQuarantine -bool false" \
    "Disable 'Are you sure you want to open this application?' dialog"

execute "defaults write com.apple.print.PrintingPrefs 'Quit When Finished' -bool true" \
    "Automatically quit the printer app once the print jobs are completed"

execute "defaults write com.apple.screencapture disable-shadow -bool true" \
    "Disable shadow in screenshots"

execute "defaults write com.apple.screencapture location -string '$HOME/Desktop'" \
    "Save screenshots to the Desktop"

execute "defaults write com.apple.screencapture type -string 'png'" \
    "Save screenshots as PNGs"

execute "defaults write com.apple.screensaver askForPassword -int 1 && \
         defaults write com.apple.screensaver askForPasswordDelay -int 0"\
    "Require password immediately after into sleep or screen saver mode"

execute "defaults write NSGlobalDomain AppleFontSmoothing -int 2" \
    "Enable subpixel font rendering on non-Apple LCDs"

execute "defaults write NSGlobalDomain AppleShowScrollBars -string 'Always'" \
    "Always show scrollbars"

execute "defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true" \
    "Disable automatic termination of inactive apps"

execute "defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true && \
         defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true" \
    "Expand save panel by default"

execute "defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2" \
    "Set sidebar icon size to medium"

execute "defaults write NSGlobalDomain NSUseAnimatedFocusRing -bool false" \
    "Disable the over-the-top focus ring animation"

execute "defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false" \
    "Disable resume system-wide"

execute "defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true && \
         defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true" \
    "Expand print panel by default"

execute "sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string 'Laptop' && \
         sudo scutil --set ComputerName 'laptop' && \
         sudo scutil --set HostName 'laptop' && \
         sudo scutil --set LocalHostName 'laptop'" \
    "Set computer name"

execute "sudo systemsetup -setrestartfreeze on" \
    "Restart automatically if the computer freezes"

execute "sudo defaults write /Library/Preferences/com.apple.Bluetooth.plist ControllerPowerState 0 && \
         sudo launchctl unload /System/Library/LaunchDaemons/com.apple.blued.plist && \
         sudo launchctl load /System/Library/LaunchDaemons/com.apple.blued.plist" \
    "Turn Bluetooth off"

execute "for domain in ~/Library/Preferences/ByHost/com.apple.systemuiserver.*; do
            sudo defaults write \"\${domain}\" dontAutoLoad -array \
                '/System/Library/CoreServices/Menu Extras/TimeMachine.menu' \
                '/System/Library/CoreServices/Menu Extras/Volume.menu'
         done \
            && sudo defaults write com.apple.systemuiserver menuExtras -array \
                '/System/Library/CoreServices/Menu Extras/Bluetooth.menu' \
                '/System/Library/CoreServices/Menu Extras/AirPort.menu' \
                '/System/Library/CoreServices/Menu Extras/Battery.menu' \
                '/System/Library/CoreServices/Menu Extras/Clock.menu'
        " \
    "Hide Time Machine and Volume icons from the menu bar"

execute "defaults write NSGlobalDomain NSWindowResizeTime -float 0.001" \
   "Increase window resize speed for Cocoa applications"

execute "defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false" \
   "Save to disk (not to iCloud) by default"

execute "defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true" \
   "Display ASCII control characters using caret notation in standard text views"

execute "defaults write com.apple.helpviewer DevMode -bool true" \
   "Set Help Viewer windows to non-floating mode"

execute "defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1" \
   "Check for software updates daily, not just once per week"

execute "sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true" \
   "Enable HiDPI display modes (requires restart)"

execute "sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName" \
   "Reveal IP address, hostname, OS version, etc. when clicking the clock in the login window"

execute "sudo nvram SystemAudioVolume=%00" \
   "Disable the sound effects on boot"

execute "/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user" \
   "Remove duplicates in the “Open With” menu (also see 'lscleanup' alias)"

execute "defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false" \
   "Disable “natural” (Lion-style) scrolling"

execute "defaults write com.apple.print.PrintingPrefs 'Quit When Finished' -bool true" \
   "Automatically quit printer app once the print jobs complete"

killall "SystemUIServer" &> /dev/null

###############################################################################

print_info "Done. Note that some of these changes require a logout/restart to take effect."
